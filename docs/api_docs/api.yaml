openapi: 3.0.3
info:
  title: Portal Link API
  description: Portal Link User Authentication and Management API
  version: 1.0.0
  contact:
    name: Portal Link Team

servers:
  - url: http://localhost:8080/api/v1
    description: Development environment
  - url: https://api.portallink.com/v1
    description: Production environment

tags:
  - name: user
    description: User operations
  - name: portal-page
    description: Portal Page operations

paths:
  /user/signup:
    post:
      tags:
        - user
      summary: 用戶註冊
      description: 允許新使用者註冊 Portal Link 帳號
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
            example:
              name: "張三"
              email: "zhangsan@example.com"
              password: "password123"
      responses:
        '200':
          description: 註冊成功，返回 access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidParams:
                  summary: 參數驗證失敗
                  value:
                    error: "ErrInvalidParams"
                    message: "輸入參數不符合驗證規則"
                emailExists:
                  summary: 電子郵件已存在
                  value:
                    error: "ErrEmailExists"
                    message: "此電子郵件地址已被註冊"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

  /user/signin:
    post:
      tags:
        - user
      summary: 用戶登入
      description: 允許已註冊使用者登入 Portal Link 帳號
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
            example:
              email: "zhangsan@example.com"
              password: "password123"
      responses:
        '200':
          description: 登入成功，返回 access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInvalidParams"
                message: "輸入參數不符合驗證規則"
        '401':
          description: 認證失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInvalidCredentials"
                message: "電子郵件或密碼錯誤"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

  /me/portal-pages/{id}:
    get:
      tags:
        - portal-page
      summary: Get My Portal Page By ID
      description: Get a single portal page (with links) owned by the authenticated user. Links are sorted ascending by display_order.
      operationId: findMyPortalPageById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Portal Page ID
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Portal Page retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPortalPageByIDResponse'
              example:
                id: 1
                slug: "john-doe"
                title: "John's Page"
                bio: "Welcome to my personal page!"
                profile_image_url: "https://example.com/images/john.jpg"
                theme: "light"
                links:
                  - id: 1
                    title: "My Blog"
                    url: "https://blog.example.com"
                    description: "Check out my blog"
                    icon_url: "https://example.com/icons/blog.png"
                    display_order: 1
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInvalidParams"
                message: "Invalid request parameters"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrUnauthorized"
                message: "Invalid access token"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrForbidden"
                message: "You do not have permission"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrNotFound"
                message: "Resource not found"
    put:
      tags:
        - portal-page
      summary: Update Portal Page
      description: Update an existing portal page and its links
      operationId: updatePortalPage
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Portal Page ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortalPageRequest'
            example:
              slug: "john-doe-updated"
              title: "John's Updated Page"
              bio: "Welcome to my updated page!"
              profile_image_url: "https://example.com/images/john-new.jpg"
              theme: "dark"
              links: [
                {
                  "id": 1,
                  "title": "My Blog",
                  "url": "https://blog.example.com",
                  "description": "Check out my blog",
                  "icon_url": "https://example.com/icons/blog.png",
                  "display_order": 1
                },
                {
                  "title": "New Link",
                  "url": "https://new.example.com",
                  "description": "My new link",
                  "display_order": 2
                }
              ]
      responses:
        '200':
          description: Portal Page updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePortalPageResponse'
              example:
                id: 1
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                slugFormatInvalid:
                  summary: Invalid slug format
                  value:
                    error: "ErrInvalidParams"
                    message: "Slug can only contain lowercase letters, numbers, and hyphens (not at start/end)"
                slugExists:
                  summary: Slug already exists
                  value:
                    error: "ErrInvalidParams"
                    message: "This slug is already in use"
                titleTooLong:
                  summary: Title too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Title must not exceed 100 characters"
                bioTooLong:
                  summary: Bio too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Bio must not exceed 500 characters"
                invalidProfileImageUrl:
                  summary: Invalid profile image URL
                  value:
                    error: "ErrInvalidParams"
                    message: "Profile image URL must be a valid URL format"
                invalidTheme:
                  summary: Invalid theme
                  value:
                    error: "ErrInvalidParams"
                    message: "Theme must be either 'light' or 'dark'"
                linkTitleEmpty:
                  summary: Link title empty
                  value:
                    error: "ErrInvalidParams"
                    message: "Link title cannot be empty"
                linkUrlInvalid:
                  summary: Invalid link URL
                  value:
                    error: "ErrInvalidParams"
                    message: "Link URL must be a valid URL format"
                linkDescriptionTooLong:
                  summary: Link description too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Link description must not exceed 500 characters"
                linkIconUrlInvalid:
                  summary: Invalid link icon URL
                  value:
                    error: "ErrInvalidParams"
                    message: "Link icon URL must be a valid URL format"
                linkDisplayOrderInvalid:
                  summary: Invalid display order
                  value:
                    error: "ErrInvalidParams"
                    message: "Link display order must be a positive integer"
                linkIdNotFound:
                  summary: Link ID not found
                  value:
                    error: "ErrInvalidParams"
                    message: "Link ID does not exist or does not belong to this page"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrUnauthorized"
                message: "Invalid access token"
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrForbidden"
                message: "You do not have permission"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrNotFound"
                message: "Resource not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

  /portal-pages/{slug}:
    get:
      tags:
        - portal-page
      summary: Get Portal Page By Slug
      description: Get a single public portal page (with links) by slug. Public access without authentication. Links are sorted ascending by display_order.
      operationId: findPortalPageBySlug
      parameters:
        - name: slug
          in: path
          required: true
          description: Portal Page 自訂網址
          schema:
            type: string
            pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
      responses:
        '200':
          description: Portal Page retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPortalPageBySlugResponse'
              example:
                id: 1
                slug: "john-doe"
                title: "John's Page"
                bio: "Welcome to my personal page!"
                profile_image_url: "https://example.com/images/john.jpg"
                theme: "light"
                links:
                  - id: 1
                    title: "My Blog"
                    url: "https://blog.example.com"
                    description: "Check out my blog"
                    icon_url: "https://example.com/icons/blog.png"
                    display_order: 1
                  - id: 2
                    title: "My GitHub"
                    url: "https://github.com/johndoe"
                    description: "Check out my projects"
                    icon_url: "https://example.com/icons/github.png"
                    display_order: 2
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInvalidParams"
                message: "輸入參數不符合驗證規則"
        '404':
          description: Portal Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrPortalPageNotFound"
                message: "查無符合 slug 的 Portal Page"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

  /me/portal-pages:
    get:
      tags:
        - portal-page
      summary: List Portal Pages
      description: Get all portal pages created by the authenticated user
      operationId: listPortalPages
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Portal Pages list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPortalPagesResponse'
              examples:
                withPages:
                  summary: User has portal pages
                  value:
                    portal_pages: [
                      {
                        "id": 1,
                        "slug": "john-doe",
                        "title": "John's Page"
                      },
                      {
                        "id": 2,
                        "slug": "my-links",
                        "title": "My Links"
                      }
                    ]
                emptyList:
                  summary: User has no portal pages
                  value:
                    portal_pages: []
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrUnauthorized"
                message: "Invalid access token"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"
    post:
      tags:
        - portal-page
      summary: Create Portal Page
      description: Create a new personal portal page
      operationId: createPortalPage
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePortalPageRequest'
            example:
              slug: "john-doe"
              title: "John's Page"
              bio: "Welcome to my personal page!"
              profile_image_url: "https://example.com/images/john.jpg"
              theme: "light"
      responses:
        '201':
          description: Portal Page created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePortalPageResponse'
              example:
                id: 1
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                slugFormatInvalid:
                  summary: Invalid slug format
                  value:
                    error: "ErrInvalidParams"
                    message: "Slug can only contain lowercase letters, numbers, and hyphens (not at start/end)"
                slugTooShort:
                  summary: Slug too short
                  value:
                    error: "ErrInvalidParams"
                    message: "Slug must be between 3 and 50 characters"
                slugTooLong:
                  summary: Slug too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Slug must be between 3 and 50 characters"
                slugReserved:
                  summary: Reserved slug
                  value:
                    error: "ErrInvalidParams"
                    message: "This slug is reserved and cannot be used (e.g., admin, api, static)"
                slugExists:
                  summary: Slug already exists
                  value:
                    error: "ErrInvalidParams"
                    message: "This slug is already in use"
                titleEmpty:
                  summary: Empty title
                  value:
                    error: "ErrInvalidParams"
                    message: "Title cannot be empty"
                titleTooLong:
                  summary: Title too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Title must not exceed 100 characters"
                bioTooLong:
                  summary: Bio too long
                  value:
                    error: "ErrInvalidParams"
                    message: "Bio must not exceed 500 characters"
                invalidProfileImageUrl:
                  summary: Invalid profile image URL
                  value:
                    error: "ErrInvalidParams"
                    message: "Profile image URL must be a valid URL format"
                invalidTheme:
                  summary: Invalid theme
                  value:
                    error: "ErrInvalidParams"
                    message: "Theme must be either 'light' or 'dark'"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrUnauthorized"
                message: "Invalid access token"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

  /portal-pages/{slug}:
    get:
      tags:
        - portal-page
      summary: Find Portal Page By Slug
      description: Public endpoint to get a portal page (with links) by slug. Links are sorted ascending by display_order.
      operationId: findPortalPageBySlug
      parameters:
        - name: slug
          in: path
          required: true
          description: Portal Page slug
          schema:
            type: string
      responses:
        '200':
          description: Portal Page retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPortalPageByIDResponse'
              example:
                id: 1
                slug: "john-doe"
                title: "John's Page"
                bio: "Welcome to my personal page!"
                profile_image_url: "https://example.com/images/john.jpg"
                theme: "light"
                links:
                  - id: 1
                    title: "My Blog"
                    url: "https://blog.example.com"
                    description: "Check out my blog"
                    icon_url: "https://example.com/icons/blog.png"
                    display_order: 1
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInvalidParams"
                message: "Invalid request parameters"
        '404':
          description: Page not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrNotFound"
                message: "Resource not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "ErrInternal"
                message: "Internal server error"

components:
  schemas:
    SignUpRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 使用者全名
          example: "張三"
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
          description: 電子郵件地址
          example: "zhangsan@example.com"
        password:
          type: string
          minLength: 8
          pattern: '^(?=.*[A-Za-z])(?=.*\d).+$'
          description: 使用者密碼（最少 8 字元，需包含英文和數字）
          example: "password123"

    SignUpResponse:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
          description: 訪問令牌（有效期 1 天）
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    SignInRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 255
          description: 電子郵件地址
          example: "zhangsan@example.com"
        password:
          type: string
          minLength: 8
          description: 使用者密碼
          example: "password123"

    SignInResponse:
      type: object
      required:
        - access_token
      properties:
        access_token:
          type: string
          description: 訪問令牌（有效期 1 天）
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    CreatePortalPageRequest:
      type: object
      required:
        - slug
        - title
      properties:
        slug:
          type: string
          minLength: 3
          maxLength: 50
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          description: |
            個人頁面的唯一標識符
            - 長度：3-50 字元
            - 只能包含小寫英文字母（a-z）、數字（0-9）和連字號（-）
            - 不可以連字號開頭或結尾
            - 不可包含連續的連字號
            - 系統會自動將輸入轉換為小寫
            - 不可使用系統保留字（如 admin、api、static 等）
          example: "john-doe"
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: |
            頁面標題
            - 長度：1-100 字元
            - 不可為空
          example: "John's Page"
        bio:
          type: string
          maxLength: 500
          description: |
            個人簡介（選填）
            - 最多 500 字元
            - 可為空
          example: "Welcome to my personal page!"
        profile_image_url:
          type: string
          format: uri
          description: |
            個人頭像圖片網址（選填）
            - 必須為有效的 URL 格式
            - 可為空
          example: "https://example.com/images/john.jpg"
        theme:
          type: string
          enum: [light, dark]
          description: |
            頁面主題（選填）
            - 可選值：light、dark
            - 預設值：light
          example: "light"

    CreatePortalPageResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          description: Portal Page ID
          example: 1

    UpdatePortalPageRequest:
      type: object
      required:
        - links
      properties:
        slug:
          type: string
          minLength: 3
          maxLength: 50
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          description: |
            個人頁面的唯一標識符（選填）
            - 長度：3-50 字元
            - 只能包含小寫英文字母（a-z）、數字（0-9）和連字號（-）
            - 不可以連字號開頭或結尾
            - 不可包含連續的連字號
            - 系統會自動將輸入轉換為小寫
            - 不可使用系統保留字（如 admin、api、static 等）
          example: "john-doe-updated"
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: |
            頁面標題（選填）
            - 長度：1-100 字元
            - 若更新則不可為空
          example: "John's Updated Page"
        bio:
          type: string
          maxLength: 500
          description: |
            個人簡介（選填）
            - 最多 500 字元
            - 可為空
          example: "Welcome to my updated page!"
        profile_image_url:
          type: string
          format: uri
          description: |
            個人頭像圖片網址（選填）
            - 必須為有效的 URL 格式
            - 可為空
          example: "https://example.com/images/john-new.jpg"
        theme:
          type: string
          enum: [light, dark]
          description: |
            頁面主題（選填）
            - 可選值：light、dark
          example: "dark"
        links:
          type: array
          description: 頁面中的連結清單（必填）
          items:
            $ref: '#/components/schemas/LinkRequest'

    LinkRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: |
            Link ID（選填）
            - 若提供則為更新現有連結
            - 若不提供則為新增連結
          example: 1
        title:
          type: string
          minLength: 1
          maxLength: 100
          description: |
            連結標題（必填）
            - 長度：1-100 字元
            - 不可為空
          example: "My Blog"
        url:
          type: string
          format: uri
          description: |
            連結網址（必填）
            - 必須為有效的 URL 格式
          example: "https://blog.example.com"
        description:
          type: string
          maxLength: 500
          description: |
            連結描述（選填）
            - 最多 500 字元
            - 可為空
          example: "Check out my blog"
        icon_url:
          type: string
          format: uri
          description: |
            連結圖示 URL（選填）
            - 必須為有效的 URL 格式
            - 可為空
          example: "https://example.com/icons/blog.png"
        display_order:
          type: integer
          minimum: 1
          description: |
            顯示順序（必填）
            - 必須為正整數
          example: 1
      required:
        - title
        - url
        - display_order

    UpdatePortalPageResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
          description: Portal Page ID
          example: 1

    FindPortalPageByIDResponse:
      type: object
      required:
        - id
        - slug
        - title
      properties:
        id:
          type: integer
          format: int64
          description: Portal Page ID
          example: 1
        slug:
          type: string
          description: 個人頁面的唯一標識符
          example: "john-doe"
        title:
          type: string
          description: 頁面標題
          example: "John's Page"
        bio:
          type: string
          description: 個人簡介（可為空）
          example: "Welcome to my personal page!"
        profile_image_url:
          type: string
          description: 個人頭像圖片網址（可為空）
          format: uri
          example: "https://example.com/images/john.jpg"
        theme:
          type: string
          enum: [light, dark]
          description: 頁面主題
          example: "light"
        links:
          type: array
          description: 該頁面的連結清單（依 display_order 升冪排序）
          items:
            $ref: '#/components/schemas/LinkDetail'

    FindPortalPageBySlugResponse:
      type: object
      required:
        - id
        - slug
        - title
      properties:
        id:
          type: integer
          format: int64
          description: Portal Page ID
          example: 1
        slug:
          type: string
          description: 個人頁面的唯一標識符
          example: "john-doe"
        title:
          type: string
          description: 頁面標題
          example: "John's Page"
        bio:
          type: string
          description: 個人簡介（可為空）
          example: "Welcome to my personal page!"
        profile_image_url:
          type: string
          description: 個人頭像圖片網址（可為空）
          format: uri
          example: "https://example.com/images/john.jpg"
        theme:
          type: string
          enum: [light, dark]
          description: 頁面主題
          example: "light"
        links:
          type: array
          description: 該頁面的連結清單（依 display_order 升冪排序）
          items:
            $ref: '#/components/schemas/LinkDetail'

    LinkDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Link ID
          example: 1
        title:
          type: string
          description: 連結標題
          example: "My Blog"
        url:
          type: string
          format: uri
          description: 連結網址
          example: "https://blog.example.com"
        description:
          type: string
          description: 連結描述（可為空）
          example: "Check out my blog"
        icon_url:
          type: string
          format: uri
          description: 連結圖示 URL（可為空）
          example: "https://example.com/icons/blog.png"
        display_order:
          type: integer
          minimum: 1
          description: 顯示順序（升冪排序）
          example: 1

    ListPortalPagesResponse:
      type: object
      required:
        - portal_pages
      properties:
        portal_pages:
          type: array
          description: 使用者建立的所有 Portal Pages（按建立時間升冪排序）
          items:
            $ref: '#/components/schemas/PortalPageSummary'

    PortalPageSummary:
      type: object
      required:
        - id
        - slug
        - title
      properties:
        id:
          type: integer
          format: int64
          description: Portal Page ID
          example: 1
        slug:
          type: string
          description: 個人頁面的唯一標識符
          example: "john-doe"
        title:
          type: string
          description: 頁面標題
          example: "John's Page"

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: 錯誤代碼
          example: "ErrInvalidParams"
        message:
          type: string
          description: 錯誤訊息
          example: "輸入參數不符合驗證規則"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: 使用 access_token 進行認證

